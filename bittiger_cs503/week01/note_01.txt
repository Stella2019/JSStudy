➜  week01 git:(master) ✗ nvm --version
0.33.0


➜  week01 git:(master) ✗ npm -v
5.6.0


➜  JSStudy git:(master) ✗ node -v
v8.11.3


➜  week01 git:(master) ✗ ng -v

     _                      _                 ____ _     ___
    / \   _ __   __ _ _   _| | __ _ _ __     / ___| |   |_ _|
   / △ \ | '_ \ / _` | | | | |/ _` | '__|   | |   | |    | |
  / ___ \| | | | (_| | |_| | | (_| | |      | |___| |___ | |
 /_/   \_\_| |_|\__, |\__,_|_|\__,_|_|       \____|_____|___|
                |___/


Angular CLI: 6.0.8
Node: 8.11.3
OS: linux x64
Angular:
...

Package                      Version
------------------------------------------------------
@angular-devkit/architect    0.6.8
@angular-devkit/core         0.6.8
@angular-devkit/schematics   0.6.8
@schematics/angular          0.6.8
@schematics/update           0.6.8
rxjs                         6.2.2
typescript                   2.7.2


ng new oj-client

cd oj-client

npm install bootstrap --save

npm WARN bootstrap@4.1.2 requires a peer of jquery@1.9.1 - 3 but none is installed. You must install peer dependencies yourself.
npm WARN bootstrap@4.1.2 requires a peer of popper.js@^1.14.3 but none is installed. You must install peer dependencies yourself.


npm install jquery --save

npm install popper.js@^1.14.3 --save


alias ns="ng serve --host 0.0.0.0 --port 4200"

cd src/app

mkdir components

cd components

ng g c problem-list -it -is
ng g c problem-list

app.component.html


mkdir models
problem.model.ts

problem-list.component.ts


mkdir services
cd services
ng g s data

//create dataservice, so this service can be application wide
data.service.ts
import {Problem} from "../models/problem.model";
import {PROBLEMS} from "../mock-problems";
write two methods: getProblems(): Problem[] {}
                   getProblem(id: number): Proutingroblem {}


//provide the dataservice just created
app.module.ts
import { DataService } from './services/data.service';
  providers: [{
    provide: "data",
    useClass: DataService
  }],


//create router
app.routes.ts

app.module.ts
import { routing } from "./app.routes";
  imports: [
    BrowserModule,
    routing
  ],


//now make each question in the list clickable
//each question will lead to the detail of the question
problem-list.component.html
<a class="list-group-item" *ngFor="let problem of problems" [routerLink]="['/problems', problem.id]">

//now change the:
app.component.html
<!--<app-problem-list>app problem list</app-problem-list>-->
<router-outlet></router-outlet>
//now the page will not go to fixed <app-problem-list>, but it be directed by
//the routers in the "app.routes.ts"

//now http://10.17.10.185:4200/problems/1
will lead to problem-detail.component.html

//now the previous link works, but not clickable yet
//now add the link in the list
problem-list.component.ts
    <a class="list-group-item" *ngFor="let problem of problems"
    [routerLink]="['/problems', problem.id]">
//now the cursor because a link


//now try to display the detail of each question
problem-detail.component.html
problem-detail.component.ts
















